#include <ntddk.h>

#define	DEVICE_NAME			L"\\Device\\MyDriver"
#define LINK_NAME			L"\\DosDevices\\MyDriver"
#define LINK_GLOBAL_NAME	L"\\DosDevices\\Global\\MyDriver"

#define IOCTL_TEST						CTL_CODE(FILE_DEVICE_UNKNOWN, 0x800, METHOD_BUFFERED, FILE_ANY_ACCESS) 
#define IOCTL_TEST2						CTL_CODE(FILE_DEVICE_UNKNOWN, 0x801, METHOD_BUFFERED, FILE_ANY_ACCESS) 
#define IOCTL_TEST3						CTL_CODE(FILE_DEVICE_UNKNOWN, 0x802, METHOD_BUFFERED, FILE_ANY_ACCESS) 
#define IOCTL_GETEPROCESS				CTL_CODE(FILE_DEVICE_UNKNOWN, 0x803, METHOD_BUFFERED, FILE_ANY_ACCESS) 
#define IOCTL_KILLPROCESS				CTL_CODE(FILE_DEVICE_UNKNOWN, 0x804, METHOD_BUFFERED, FILE_ANY_ACCESS) //Kill Process by PspTemThread

#define IOVTL_GETSSDTFUCADDR			CTL_CODE(FILE_DEVICE_UNKNOWN, 0x805, METHOD_BUFFERED, FILE_ANY_ACCESS) //Get ssdt func addr

#define IOCTL_ENUMHANDLE				CTL_CODE(FILE_DEVICE_UNKNOWN, 0x806, METHOD_BUFFERED, FILE_ANY_ACCESS) //Enum Process Handle

#define IOCTL_GetProcessPath			CTL_CODE(FILE_DEVICE_UNKNOWN, 0x807, METHOD_BUFFERED, FILE_ANY_ACCESS) //Get Process Path by selocat

#define IOCTL_ENUMDRIVER				CTL_CODE(FILE_DEVICE_UNKNOWN, 0x808, METHOD_BUFFERED, FILE_ANY_ACCESS) //Enum dirver

#define IOCTL_ENUMDIRPISPATCH			CTL_CODE(FILE_DEVICE_UNKNOWN, 0x809, METHOD_BUFFERED, FILE_ANY_ACCESS) //Enum irp DisPatch

#define IOCTL_GetSssdtFuncAddr			CTL_CODE(FILE_DEVICE_UNKNOWN, 0x810, METHOD_BUFFERED, FILE_ANY_ACCESS) //Get sssdt func addr

#define IOCTL_GetW32pServiceTable		CTL_CODE(FILE_DEVICE_UNKNOWN, 0x811, METHOD_BUFFERED, FILE_ANY_ACCESS) //Get W32pServiceTable

#define IOCTL_GetObjectInfo				CTL_CODE(FILE_DEVICE_UNKNOWN, 0x812, METHOD_BUFFERED, FILE_ANY_ACCESS) //Get ObjectInfo

#define IOCTL_GetObjectProcedureByIndex CTL_CODE(FILE_DEVICE_UNKNOWN, 0x813, METHOD_BUFFERED, FILE_ANY_ACCESS) //Get Object Procedure

#define IOCTL_ENUMCALLBACKS			CTL_CODE(FILE_DEVICE_UNKNOWN, 0x814, METHOD_BUFFERED, FILE_ANY_ACCESS) //Enum Callbacks

#define IOCTL_ENUMOBCALLBACKS		CTL_CODE(FILE_DEVICE_UNKNOWN, 0x815, METHOD_BUFFERED, FILE_ANY_ACCESS) //Enum Ob Callbacks

#define IOCTL_ENUMWORKITEMTHREAD	CTL_CODE(FILE_DEVICE_UNKNOWN, 0x816, METHOD_BUFFERED, FILE_ANY_ACCESS) //Enum WorkItem Thread

#define IOCTL_ENUMMINIFLTER			CTL_CODE(FILE_DEVICE_UNKNOWN, 0x817, METHOD_BUFFERED, FILE_ANY_ACCESS) //Enum Minifilter

#define IOCTL_ENUMMDPCTIMER			CTL_CODE(FILE_DEVICE_UNKNOWN, 0x818, METHOD_BUFFERED, FILE_ANY_ACCESS) //Enum DpcTimer

#define IOCTL_REMOVEDPCTIMER			CTL_CODE(FILE_DEVICE_UNKNOWN, 0x819, METHOD_BUFFERED, FILE_ANY_ACCESS) //Remove DpcTimer !!!!!!!!!!!!!

#define IOCTL_ENUMIOTMER			CTL_CODE(FILE_DEVICE_UNKNOWN, 0x820, METHOD_BUFFERED, FILE_ANY_ACCESS) //Enum IoTimer

#define IOCTL_STARTIOTMER			CTL_CODE(FILE_DEVICE_UNKNOWN, 0x821, METHOD_BUFFERED, FILE_ANY_ACCESS) // Start IoTimer !!!!!!

#define IOCTL_STOPIOTMER			CTL_CODE(FILE_DEVICE_UNKNOWN, 0x822, METHOD_BUFFERED, FILE_ANY_ACCESS) // Stop IoTimer!!!!!!!!!

#define IOCTL_ENUMFILTERDRIVER			CTL_CODE(FILE_DEVICE_UNKNOWN, 0x823, METHOD_BUFFERED, FILE_ANY_ACCESS) // Enum Filter Driver
/*
"LoadImage",//0
"CreateProcess",//1
"CreateThread",//2
"CmpRegister",//3
"ShutDowdn",//4
// EnumType:5	回调类型不变
"BugCheck",//5
"BugCheckReason"//6
*/

//#define IOCTL_ENUMTHREADCALLBACKS		CTL_CODE(FILE_DEVICE_UNKNOWN, 0x815, METHOD_BUFFERED, FILE_ANY_ACCESS) //Enum CreateThread Callbacks
//
//#define IOCTL_ENUMLOADIMAGECALLBACKS	CTL_CODE(FILE_DEVICE_UNKNOWN, 0x816, METHOD_BUFFERED, FILE_ANY_ACCESS) //Enum Load Image Callbacks
//
//#define IOCTL_ENUMCMPREGCALLBACKS		CTL_CODE(FILE_DEVICE_UNKNOWN, 0x817, METHOD_BUFFERED, FILE_ANY_ACCESS) //Enum CmReg	Callbacks
//
//#define IOCTL_ENUMSHUTDOWNCALLBACKS		CTL_CODE(FILE_DEVICE_UNKNOWN, 0x818, METHOD_BUFFERED, FILE_ANY_ACCESS) //Enum ShutDown Callbacks
//
//#define	IOCTL_ENUMBUGCHECKCALLBACKS		CTL_CODE(FILE_DEVICE_UNKNOWN, 0x819, METHOD_BUFFERED, FILE_ANY_ACCESS) //EnumBugCheck Callbacks
